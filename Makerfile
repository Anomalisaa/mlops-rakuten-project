.PHONY: uv set-dvc init-git init-dvc build run track dvc-docto all

# Install the uv tool (from Astral)
uv:
	curl -LsSf https://astral.sh/uv/install.sh | sh

# Configure DVC remote using Dagshub/S3 settings
set-dvc:
	dvc remote add origin s3://dvc
	dvc remote modify origin endpointurl https://dagshub.com/ssime-git/DVC_within_docker.s3
	dvc remote modify origin --local access_key_id XXX
	dvc remote modify origin --local secret_access_key XXX
	dvc remote default origin

# Initialize a new Git repository and commit the initial structure
init-git:
	git init
	git add .gitignore Dockerfile docker-compose.yml dvc.yaml src/
	git commit -m "Initial project structure and pipeline definition"

# Initialize DVC and commit the DVC configuration files
init-dvc:
	dvc init
	git add .dvc/config .dvc/.gitignore
	git commit -m "Initialize DVC"

# Build the Docker Compose services
build:
	docker compose build

# Run the pipeline using the dedicated dvc-runner service
run:
	docker compose run --rm dvc-runner dvc repro

# Track changes: commit updates in Git, commit DVC-tracked files, and push them
track:
	git add .
	git commit -m "updating the run"
	dvc commit
	git push
	dvc push

# Run a DVC diagnostic check using the dvc-runner service
dvc-docto:
	docker compose run --rm dvc-runner dvc doctor

# Chain all key steps together:
all: init-git init-dvc build run
