services:
  dvc-sync:
    build:
      context: ./dockerfiles/dvc
      dockerfile: Dockerfile
    volumes:
      - .:/workspace
      - dvc-cache:/workspace/.dvc/cache
    working_dir: /workspace
    environment:
  # Authentification (keep only the ones we need)
    #  - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
    #  - MLFLOW_TRACKING_USERNAME=${MLFLOW_TRACKING_USERNAME}
    #  - MLFLOW_TRACKING_PASSWORD=${MLFLOW_TRACKING_PASSWORD}
      - DAGSHUB_USER_TOKEN=${DAGSHUB_USER_TOKEN} 
      - DAGSHUB_REPO_OWNER=${DAGSHUB_REPO_OWNER}
      - DAGSHUB_REPO_NAME=${DAGSHUB_REPO_NAME}
    command: ["dvc", "pull", "--force"]
    # command: ["dvc", "pull"]
  preprocessing:
    build:
      context: ./plugins/cd4ml/data_processing
      dockerfile: Dockerfile
    volumes:
      - "./shared_volume/data:/app/data"
    depends_on:
      - dvc-sync
    command: ["python", "run_preprocessing.py"]


  model_training:
    build:
      context: ./plugins/cd4ml/model_training
      dockerfile: Dockerfile
    volumes:
      - "./shared_volume/data:/app/data"
      - "./shared_volume/models:/app/models"
    depends_on:
      - preprocessing
    env_file:
      - .env
    environment:
      - MODEL_OUTPUT_DIR=/app/models
      - DATA_INPUT_DIR=/app/data/processed
    command: ["python", "run_model_training.py"]


  model_validation:
    build:
      context: ./plugins/cd4ml/model_validation
      dockerfile: Dockerfile
    volumes:
      - "./shared_volume/data:/app/data"
      - "./shared_volume/models:/app/models"
    depends_on:
      - model_training
    env_file:
      - .env
    command: ["python", "run_model_validation.py"]
  
  inference:
    build:
      context: ./plugins/cd4ml/inference
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - "./shared_volume/data:/app/data"
      - "./shared_volume/models:/app/models"
      - dvc-cache:/workspace/.dvc/cache
    depends_on:
      - model_validation
      - dvc-sync
    env_file:
      - .env
    command: ["uvicorn", "infer:app", "--host", "0.0.0.0", "--port", "8000"]

volumes:
  dvc-cache:
