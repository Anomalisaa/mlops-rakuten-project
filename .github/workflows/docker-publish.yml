name: CI & Docker-Publish

on:
  push:
    branches: [ main, develop, dev_new-feature-githubactions ]
  pull_request:
    branches: [ main, develop, dev_new-feature-githubactions ]

permissions:
  contents: read

jobs:
  e2e-test:
    name: Run full E2E in Docker Compose
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare .env & shared_volume
        run: |
          touch .env
          mkdir -p shared_volume/data shared_volume/models

      - name: Create CI override to skip DVC sync
        run: |
          cat > docker-compose.ci.yml << 'EOF'
          version: '3.8'
          services:
            dvc-sync:
              command: ["sh", "-c", "echo 'Skipping DVC sync in CI'"]
          EOF

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build entire stack
        run: |
          docker compose -f docker-compose.yml -f docker-compose.ci.yml build

      - name: Run tests container
        run: |
          docker compose \
            -f docker-compose.yml \
            -f docker-compose.ci.yml \
            up --abort-on-container-exit --exit-code-from tests

      - name: Tear down
        if: always()
        run: |
          docker compose \
            -f docker-compose.yml \
            -f docker-compose.ci.yml \
            down --volumes --remove-orphans

  detect-changes:
    name: Detect which pipeline services changed
    needs: e2e-test
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - name: Fetch full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine changed services
        id: set-services
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          services=()

          # dvc-sync image (folder: dockerfiles/dvc)
          if echo "$CHANGED" | grep -qE '^dockerfiles/dvc/'; then
            services+=("dvc")
          fi
          # preprocessing
          if echo "$CHANGED" | grep -qE '^dockerfiles/preprocessing/|^plugins/cd4ml/data_processing/'; then
            services+=("preprocessing")
          fi
          # model_training
          if echo "$CHANGED" | grep -qE '^dockerfiles/model_training/|^plugins/cd4ml/model_training/'; then
            services+=("model_training")
          fi
          # model_validation
          if echo "$CHANGED" | grep -qE '^dockerfiles/model_validation/|^plugins/cd4ml/model_validation/'; then
            services+=("model_validation")
          fi
          # tests
          if echo "$CHANGED" | grep -qE '^dockerfiles/tests/|^plugins/cd4ml/tests/'; then
            services+=("tests")
          fi
          # auth_service
          if echo "$CHANGED" | grep -qE '^dockerfiles/auth_service/|^plugins/cd4ml/inference/auth_service'; then
            services+=("auth_service")
          fi
          # predict_service
          if echo "$CHANGED" | grep -qE '^dockerfiles/predict_service/|^plugins/cd4ml/inference/predict_service'; then
            services+=("predict_service")
          fi

          # Emit JSON array, e.g. ["dvc","preprocessing",...]
          if [ ${#services[@]} -eq 0 ]; then
            echo "services=[]" >> $GITHUB_OUTPUT
          else
            # join with commas
            arr=$(printf '"%s",' "${services[@]}")
            arr="[${arr%,}]"
            echo "services=$arr" >> $GITHUB_OUTPUT
          fi

  publish:
    name: Build & Push Changed Images
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.services != '[]' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push image for ${{ matrix.service }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: dockerfiles/${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            igurstein/rakuten_dev:${{ matrix.service }}-latest
            igurstein/rakuten_dev:${{ matrix.service }}-${{ github.sha }}