name: CI ‚Äì Build, Test & Push Docker Image

on:
  push:
    branches:
      - main 
      - delevop
      - dev_new-feature-githubactions

permissions:
  contents: read
  packages: write  # f√ºr Docker-Push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # 1. Unit Tests als eigenst√§ndiger Job
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install all requirements files
        run: |
          python -m pip install --upgrade pip
          find . -type f -name 'requirements*.txt' | while read reqfile; do
            echo "üîç Installing from $reqfile"
            pip install -r "$reqfile"
          done

      - name: Run pytest
        run: pytest --maxfail=1 --disable-warnings -q

  # 2. Build & Test Docker-Image
  build-and-test:
    name: Build & Test Docker Image
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Buildx einrichten, um multi-arch-Caching zu erlauben
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      # Optionales Caching via GitHub Packages oder Docker Hub
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # Image bauen und lokal taggen
      - name: Build image
        run: |
          docker buildx build \
            --cache-to type=local,dest=/tmp/.buildx-cache-new \
            --cache-from type=local,src=/tmp/.buildx-cache \
            --load \
            -t igurstein/rakuten_dev:${{ github.sha }} \
            .

      # Layer-Cache f√ºr n√§chste Runs aktualisieren
      - name: Save cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Smoke-Tests oder Integrationstests im Container
      - name: Smoke test container
        run: |
          docker run --rm igurstein/rakuten_dev:${{ github.sha }} \
            sh -c "pytest --maxfail=1 --disable-warnings -q tests/integration"

  # 3. Push only if build-and-test succeeded
  push:
    name: Push Docker Image
    needs: build-and-test
    runs-on: ubuntu-latest
    if: ${{ needs.build-and-test.result == 'success' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image
        run: |
          docker tag igurstein/rakuten_dev:${{ github.sha }} igurstein/rakuten_dev:latest
          docker push igurstein/rakuten_dev:${{ github.sha }}
          docker push igurstein/rakuten_dev:latest