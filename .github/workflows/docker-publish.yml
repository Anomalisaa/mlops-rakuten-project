name: Build & Push Docker Services

# Verhindere parallele Runs auf demselben Branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Trigger auf Push/PR zu main, develop oder dev_new-feature-githubactions
on:
  push:
    branches: [ main, develop, dev_new-feature-githubactions ]
  pull_request:
    branches: [ main, develop, dev_new-feature-githubactions ]

env:
  # Wir pushen sp√§ter nach Docker Hub unter: igurstein/rakuten_dev-<service>
  REGISTRY: docker.io
  IMAGE_PREFIX: igurstein/rakuten_dev

jobs:
  # ============================================================================
  # 1) Run pytest tests (code-level) mit DVC Pull (S3-Support)
  # ============================================================================
  pytest-tests:
    name: Run pytest tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies and DVC (inkl. S3-Support)
        run: |
          python -m pip install --upgrade pip
          # Achtung: "dvc[s3]" installiert das dvc_s3-Paket, damit 'dvc pull' von S3 funktioniert
          pip install "dvc[s3]"
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f plugins/cd4ml/tests/requirements-dev.txt ]; then pip install -r plugins/cd4ml/tests/requirements-dev.txt; fi

      - name: Pull only required DVC artifacts
        run: |
          # Stelle sicher, dass deine DVC-Remote-Konfiguration (in .dvc/config) auf S3 zeigt
          dvc pull models/tfidf_vectorizer.pkl
          dvc pull models/sgd_text_model.pkl
          dvc pull models/product_dictionary.pkl

      - name: Run pytest in plugins/cd4ml/tests
        run: |
          pytest plugins/cd4ml/tests --maxfail=1 --disable-warnings -q

  # ============================================================================
  # 2) Build & Push dvc-sync Image (disable DVC pushes via sed)
  # ============================================================================
  dvc-sync:
    name: Build & Push dvc-sync
    runs-on: ubuntu-latest
    #needs: pytest-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Patch Dockerfile to disable DVC pushes
        run: |
          sed -i 's/^RUN .*dvc push.*/# &/g' dockerfiles/dvc/Dockerfile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata for dvc-sync
        id: meta-dvc
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-dvc-sync
          tags: |
            type=ref,event=branch
            type=semver,pattern=v*.*.*

      - name: Build & Push dvc-sync Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfiles/dvc/Dockerfile
          push: true
          tags: ${{ steps.meta-dvc.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ============================================================================
  # 3) Build & Push preprocessing Image (disable DVC/MLflow pushes)
  # ============================================================================
  preprocessing:
    name: Build & Push preprocessing
    runs-on: ubuntu-latest
    needs: dvc-sync

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Patch Dockerfile to disable DVC/MLflow pushes
        run: |
          sed -i 's/^RUN .*dvc push.*/# &/g' dockerfiles/preprocessing/Dockerfile || true
          sed -i 's/^RUN .*mlflow artifacts upload.*/# &/g' dockerfiles/preprocessing/Dockerfile || true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker metadata for preprocessing
        id: meta-preproc
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-preprocessing
          tags: |
            type=ref,event=branch
            type=semver,pattern=v*.*.*

      - name: Build & Push preprocessing Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: dockerfiles/preprocessing/Dockerfile
          push: true
          tags: ${{ steps.meta-preproc.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ============================================================================
  # 4) Build & Push model_training Image (disable DVC/MLflow pushes)
  # ============================================================================
  model_training:
    name: Build & Push model_training
    runs-on: ubuntu-latest
    needs: preprocessing

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Patch Dockerfile to disable DVC/MLflow pushes
        run: |
          sed -i 's/^RUN .*dvc push.*/# &/g' dockerfiles/model_training_
