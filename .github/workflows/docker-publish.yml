name: CI & Docker-Publish

on:
  push:
    branches: [ main, develop, dev_new-feature-githubactions ]
  pull_request:
    branches: [ main, develop, dev_new-feature-githubactions ]


permissions:
  contents: read

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install test dependencies
        run: |
          pip install --upgrade pip
          # falls du ein requirements-dev.txt hast:
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          # pytest & Bibliotheken f체r deine Tests
          pip install pytest fastapi requests httpx PyJWT joblib

      - name: Run pytest
        run: pytest -q

  detect-changes:
    name: Detect changed services
    runs-on: ubuntu-latest
    needs: test
    outputs:
      services: ${{ steps.set-services.outputs.services }}
    steps:
      - name: Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine changed services
        id: set-services
        run: |
          # Liste aller ge채nderten Dateien zwischen vorherigem und aktuellem Commit
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files: $CHANGED"

          services=()
          # Auth-Service, wenn Dockerfile oder Code ge채ndert wurde
          if echo "$CHANGED" | grep -qE '^dockerfiles/auth_service/' \
            || echo "$CHANGED" | grep -qE '^plugins/cd4ml/inference/auth_service'; then
            services+=('"auth_service"')
          fi
          # Predict-Service
          if echo "$CHANGED" | grep -qE '^dockerfiles/predict_service/' \
            || echo "$CHANGED" | grep -qE '^plugins/cd4ml/inference/predict_service'; then
            services+=('"predict_service"')
          fi

          # Gib ein JSON-Array aus (oder [] wenn nichts)
          if [ ${#services[@]} -eq 0 ]; then
            echo "services=[]" >> $GITHUB_OUTPUT
          else
            echo "services=[${services[*]}]" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    name: Build & Push Docker Images
    needs: detect-changes
    runs-on: ubuntu-latest
    # Nur ausf체hren, wenn mindestens ein Service im JSON-Array steht
    if: ${{ needs.detect-changes.outputs.services != '[]' }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & push ${{ matrix.service }}
        uses: docker/build-push-action@v4
        with:
          context: .
          file: dockerfiles/${{ matrix.service }}/Dockerfile
          push: true
          tags: |
            igurstein/rakuten_dev:${{ matrix.service }}-latest
            igurstein/rakuten_dev:${{ matrix.service }}-${{ github.sha }}