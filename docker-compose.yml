services:
  dvc-sync:
    build:
      context: ./dockerfiles/dvc
      dockerfile: Dockerfile
    volumes:
      - .:/workspace
      - dvc-cache:/workspace/.dvc/cache
    working_dir: /workspace
    environment:
  # Authentification
      - DAGSHUB_USER_TOKEN=${DAGSHUB_USER_TOKEN} 
      - DAGSHUB_REPO_OWNER=${DAGSHUB_REPO_OWNER}
      - DAGSHUB_REPO_NAME=${DAGSHUB_REPO_NAME}
    command: ["dvc", "pull", "--force"]
    # command: ["dvc", "pull"]
  preprocessing:
    build:
      context: .
      dockerfile: dockerfiles/preprocessing/Dockerfile
    volumes:
      - "./shared_volume/data:/data"
    depends_on:
      dvc-sync:
        condition: service_completed_successfully
    command: ["python", "plugins/cd4ml/data_processing/run_preprocessing.py"]


  model_training:
    build:
      context: ./plugins/cd4ml/model_training
      dockerfile: Dockerfile
    volumes:
      - "./shared_volume/data:/app/data"
      - "./shared_volume/models:/app/models"
    depends_on:
      preprocessing:
        condition: service_completed_successfully
    env_file:
      - .env
    environment:
      - MODEL_OUTPUT_DIR=/app/models
      - DATA_INPUT_DIR=/app/data/processed
    command: ["python", "run_model_training.py"]


  model_validation:
    build:
      context: ./plugins/cd4ml/model_validation
      dockerfile: Dockerfile
    volumes:
      - "./shared_volume/data:/app/data"
      - "./shared_volume/models:/app/models"
    depends_on:
      model_training:
        condition: service_completed_successfully
    env_file:
      - .env
    command: ["python", "run_model_validation.py"]
  
  inference:
    build:
      context: .
      dockerfile: dockerfiles/inference/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - "./shared_volume/data:/app/data"
      - "./shared_volume/models:/app/models"
      - dvc-cache:/workspace/.dvc/cache
    depends_on:
      model_validation:
        condition: service_completed_successfully
      dvc-sync:
        condition: service_completed_successfully
    env_file:
      - .env
    command: ["uvicorn", "plugins.cd4ml.inference.infer:app", "--host", "0.0.0.0", "--port", "8000"]
volumes:
  dvc-cache:
