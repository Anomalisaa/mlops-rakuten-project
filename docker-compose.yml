services:
  dvc-sync:
    build:
      context: ./dockerfiles/dvc
      dockerfile: Dockerfile
    volumes:
      - .:/app                       # CHANGED
      - dvc-cache:/app/.dvc/cache    # CHANGED
    working_dir: /app                # CHANGED
    environment:
      - DAGSHUB_USER_TOKEN=${DAGSHUB_USER_TOKEN}
      - DAGSHUB_REPO_OWNER=${DAGSHUB_REPO_OWNER}
      - DAGSHUB_REPO_NAME=${DAGSHUB_REPO_NAME}
    command: ["dvc", "pull", "--force"]

  preprocessing:
    build:
      context: .
      dockerfile: dockerfiles/preprocessing/Dockerfile
    volumes:
      - .:/app                       # CHANGED
      - dvc-cache:/app/.dvc/cache    # CHANGED
      - ./shared_volume/data:/app/data
      - ./shared_volume/models:/app/models
    working_dir: /app                # CHANGED
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_REPO_OWNER=${GITHUB_REPO_OWNER}
      - GITHUB_REPO_NAME=${GITHUB_REPO_NAME}
    depends_on:
      dvc-sync:
        condition: service_completed_successfully
    command: >
      sh -c "python plugins/cd4ml/data_processing/run_preprocessing.py"

  model_training:
    build:
      context: .
      dockerfile: dockerfiles/model_training/Dockerfile
    volumes:
      - .:/app                       # CHANGED
      - dvc-cache:/app/.dvc/cache    # CHANGED
      - ./shared_volume/data:/app/data
      - ./shared_volume/models:/app/models
    working_dir: /app                # CHANGED
    env_file:
      - .env
    environment:
      - MODEL_OUTPUT_DIR=/app/models
      - DATA_INPUT_DIR=/app/data/processed
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    depends_on:
      preprocessing:
        condition: service_completed_successfully
    command: >
      sh -c "python plugins/cd4ml/model_training/run_model_training.py"

  model_validation:
    build:
      context: .
      dockerfile: dockerfiles/model_validation/Dockerfile
    volumes:
      - .:/app                       # CHANGED
      - dvc-cache:/app/.dvc/cache    # CHANGED
      - ./shared_volume/data:/app/data
      - ./shared_volume/models:/app/models
    working_dir: /app                # CHANGED
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    depends_on:
      model_training:
        condition: service_completed_successfully
    command: >
      sh -c "python plugins/cd4ml/model_validation/run_model_validation.py"

  tests:
    build:
      context: .
      dockerfile: dockerfiles/tests/Dockerfile
    volumes:
      - .:/app                       # CHANGED
      - dvc-cache:/app/.dvc/cache    # CHANGED
      - ./shared_volume/data:/app/data
      - ./shared_volume/models:/app/models
    working_dir: /app                # CHANGED
    env_file:
      - .env
    depends_on:
      model_validation:
        condition: service_completed_successfully
      dvc-sync:
        condition: service_completed_successfully
    command: >
      sh -c "dvc pull --force && pytest plugins/cd4ml/tests/test_inference.py -v -rA && dvc push"

  inference:
    build:
      context: .
      dockerfile: dockerfiles/inference/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - .:/app                      
      - ./shared_volume/data:/app/data
      - ./shared_volume/models:/app/models
      - dvc-cache:/app/.dvc/cache    # CHANGED
    working_dir: /app
    env_file:
      - .env
    depends_on:
      model_validation:
        condition: service_completed_successfully
      dvc-sync:
        condition: service_completed_successfully
    command: ["uvicorn", "plugins.cd4ml.inference.infer:app", "--host", "0.0.0.0", "--port", "8000"]

volumes:
  dvc-cache: